Given a set of n integers, divide the set in two subsets of n/2 sizes each such that the difference of the sum of two subsets is as minimum as possible. If n is even, then sizes of two subsets must be strictly n/2 and if n is odd, then size of one subset must be (n-1)/2 and size of other subset must be (n+1)/2. Let the weight of elements be w1, w2, w3, …, wi, …, wn.
For example, let given set be {3, 4, 5, -3, 100, 1, 89, 54, 23, 20}, the size of set is 10. Output for this set should be {4, 100, 1, 23, 20} and {3, 5, -3, 89, 54}. Both output subsets are of size 5 and sum of elements in both subsets is same (148 and 148).
Let us consider another example where n is odd. Let given set be {23, 45, -34, 12, 0, 98, -99, 4, 189, -1, 4}. The output subsets should be {45, -34, 12, 98, -1} and {23, 0, -99, 4, 189, 4}. The sums of elements in two subsets are 120 and 121 respectively.
INPUT:   
The first line will contain number of test cases T. Next line will give the size of array N. Next N numbers will follow space separated giving the elements of the array.
OUTPUT:
For each test case x, output one line containing "Case #x" followed by the minimum possible difference between two such sets.
Constraints:
1<=n<15
-99999<=wi<=99999
Sample:
Input
2
10
3 4 5 -3 1001 89 54 23 20
11
23 45 -34 120 98 -99 4 189 -1 4
Output
Case #1
0
Case #2
1
